{"title":"Alphabetically sorting your source code character vectors","markdown":{"yaml":{"title":"Alphabetically sorting your source code character vectors","subtitle":"Neat little tricks, Episode 1","date":"2022-08-17","categories":["neat-tricks"]},"headingText":"A productive rabbit hole","containsRefs":false,"markdown":"\n\n\nFor week 33 of #TidyTuesday 2022 I had to manually select names from a dataset. So, I typed something like\n```{r}\n#| eval: false\nfilter(df, name %in% c(\"The Witcher\", \"Hamilton\", \"Westworld\", \"Sense8\"))\n```\n\nDo you see what's wrong with this? No? Congratulations ðŸŽ‰, you have a much healthier, more pragmatic approach to coding than I do.\n\nI, on the other hand, was bothered by the fact that the series names were not in alphabetical order. But, *\"hey\"*, I thought, R is a [\"well-developed, simple and effective programming language\"](https://www.r-project.org/about.html), so why not use it to bring my source code into alphabetical order.\n\n#### Obviously, I could just type my input in alphabetical order, but where is the fun in that?\n\n![](images/drake.jpg){.preview-image fig-align=\"center\" width=\"300\"}\n\n::: {.callout-note appearance=\"simple\"}\nThe context is not really important, so I won't go into detail on what this dataset was about. The trick is super generally and applies to many situations anyways. But you can see my final plot [on Twitter](https://twitter.com/philippkollenda) and the accompanying blog post [on my website](https://www.pkollenda.com/blog.html).\n:::\n\n## How to programatically sort your source code into alphabetical order.\n\nMy goal is to get alphabetically sorted output that I can simply copy + paste into my source file (or write to the file with `write_lines()`).\n\n```{r}\n#| code-line-numbers: true\nx <- c(\"The Witcher\", \"Hamilton\", \"Westworld\", \"Sense8\")\nprint(x)\ndput(sort(x))\n```\nSuccess! That last line is something I can copy. ðŸ˜ƒ And...it only took approximately 1000 hours of googling to find `dput()` ðŸ™ˆ Eventually the *Similar questions* that pop-up just before you create a stackoverflow question came to the rescue.\n\nIt would be really cool to immediately copy the output of the dput() statement to the clipboard. There is the [clipr package](https://github.com/mdlincoln/clipr) which looks promising, but that is something for another evening.","srcMarkdownNoYaml":"\n\n# A productive rabbit hole\n\nFor week 33 of #TidyTuesday 2022 I had to manually select names from a dataset. So, I typed something like\n```{r}\n#| eval: false\nfilter(df, name %in% c(\"The Witcher\", \"Hamilton\", \"Westworld\", \"Sense8\"))\n```\n\nDo you see what's wrong with this? No? Congratulations ðŸŽ‰, you have a much healthier, more pragmatic approach to coding than I do.\n\nI, on the other hand, was bothered by the fact that the series names were not in alphabetical order. But, *\"hey\"*, I thought, R is a [\"well-developed, simple and effective programming language\"](https://www.r-project.org/about.html), so why not use it to bring my source code into alphabetical order.\n\n#### Obviously, I could just type my input in alphabetical order, but where is the fun in that?\n\n![](images/drake.jpg){.preview-image fig-align=\"center\" width=\"300\"}\n\n::: {.callout-note appearance=\"simple\"}\nThe context is not really important, so I won't go into detail on what this dataset was about. The trick is super generally and applies to many situations anyways. But you can see my final plot [on Twitter](https://twitter.com/philippkollenda) and the accompanying blog post [on my website](https://www.pkollenda.com/blog.html).\n:::\n\n## How to programatically sort your source code into alphabetical order.\n\nMy goal is to get alphabetically sorted output that I can simply copy + paste into my source file (or write to the file with `write_lines()`).\n\n```{r}\n#| code-line-numbers: true\nx <- c(\"The Witcher\", \"Hamilton\", \"Westworld\", \"Sense8\")\nprint(x)\ndput(sort(x))\n```\nSuccess! That last line is something I can copy. ðŸ˜ƒ And...it only took approximately 1000 hours of googling to find `dput()` ðŸ™ˆ Eventually the *Similar questions* that pop-up just before you create a stackoverflow question came to the rescue.\n\nIt would be really cool to immediately copy the output of the dput() statement to the clipboard. There is the [clipr package](https://github.com/mdlincoln/clipr) which looks promising, but that is something for another evening."},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":true,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.553","theme":{"light":"flatly","dark":"darkly"},"author":"Yebelay","title-block-banner":true,"title":"Alphabetically sorting your source code character vectors","subtitle":"Neat little tricks, Episode 1","date":"2022-08-17","categories":["neat-tricks"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}